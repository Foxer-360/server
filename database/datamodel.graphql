type Language {
  id: ID! @unique
  code: String!
  name: String!
  englishName: String!
  isDefault: Boolean! @default(value: "false")
  isEnabled: Boolean! @default(value: "false")
}

type Project {
  id: ID! @unique
  name: String!
  defaultName: String!
  languages: [Language!]! @relation(name: "EnabledLanguagesInProject")
  defaultLanguage: Language! @relation(name: "DefaultLanguageInProject")
  settings: Json! @default(value: "{}")
  websites: [Website!]! @relation(name: "WebsiteUnderProject", onDelete: CASCADE)
}

type Website {
  id: ID! @unique
  title: String!
  project: Project! @relation(name: "WebsiteUnderProject")
  languages: [Language!]! @relation(name: "EnabledLanguagesInWebsite")
  defaultLanguage: Language! @relation(name: "DefaultLanguageInWebsite")
  urlMask: String!
  settings: Json! @default(value: "{}")
  pageTypes: [PageType!]! @relation(name: "PageTypeUnderWebsite", onDelete: CASCADE)
  pages: [Page!]! @relation(name: "PageUnderWebsite", onDelete: CASCADE)
}

type PageType {
  id: ID! @unique
  name: String!
  content: Json! @default(value: "{}")
  website: Website! @relation(name: "PageTypeUnderWebsite")
  plugins: [String!]!
}

# Section with Pages
enum PageStatus {
  DRAFT
  PENDING
  PUBLISHED
}

type Page {
  id: ID! @unique
  parent: Page
  website: Website! @relation(name: "PageUnderWebsite")
  type: PageType!
  translations: [PageTranslation!]! @relation(name: "TranslationForPage", onDelete: CASCADE)
  chats: [PageChat!]! @relation(name: "ChatUnderPage", onDelete: CASCADE)
  tags: [Tag!]! @relation(name: "TagOnPage")
  plugin: PagePlugin @relation(name: "PluginForPage", onDelete: CASCADE)
  datasources: [Datasource!]! @relation(name: "DatasourceOnPage")
}

type PageTranslation {
  id: ID! @unique
  page: Page! @relation(name: "TranslationForPage")
  language: Language! @relation(name: "PageTranslationLanguage")
  url: String!
  content: Json! @default(value: "{}")
  name: String! @default(value: "New Page")
  status: PageStatus! @default(value: "DRAFT")
  description: String @default(value: " ") @migrationValue(value: " ")
  publishedFrom: DateTime
  publishedTo: DateTime
  tasks: [PageTask!]! @relation(name: "TaskUnderPage", onDelete: CASCADE)
  createdAt: DateTime!
}

type PagePlugin {
  id: ID! @unique
  page: Page! @relation(name: "PluginForPage")
  language: Language! @relation(name: "PagePluginLanguage")
  plugin: String!
  content: Json! @default(value: "{}")
}

type PageTask {
  id: ID! @unique
  pageTranslation: PageTranslation! @relation(name: "TaskUnderPage")
  done: Boolean! @default(value: "false")
  name: String!
  description: String!
  updatedAt: DateTime!
  auth0id: ID
}

type PageChat {
  id: ID! @unique
  page: Page! @relation(name: "ChatUnderPage")
  text: String!
  createdAt: DateTime!
  auth0id: ID
}

type File {
  id: ID! @unique
  hash: String! @unique
  category: String
  filename: String!
  mimetype: String
  size: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Navigation {
  id: ID! @unique
  name: String!
  website: Website! @relation(name: "NavigationUnderWebsite")
  nodes: [NavigationNode!]! @relation(name: "NodesForNavigation")
}

type NavigationNode {
  id: ID! @unique
  navigation: Navigation! @relation(name: "NodesForNavigation")
  page: ID
  title: String
  link: String
  order: Int
  parent: ID
}

type Tag {
  id: ID! @unique
  website: Website! @relation(name: "TagUnderWebsite")
  name: String!
  displayInNavigation: Boolean
  plugins: [String!]!
  color: String!
  pages: [Page!]! @relation(name: "TagOnPage")
}

type Subscriber {
  id: ID! @unique
  email: String!
  url: String
  createdAt: DateTime!
  ip: String
}

type Inquiry {
  id: ID! @unique
  message: Json!
  url: String
  createdAt: DateTime!
  ip: String
}

type Datasource {
  id: ID! @unique
  type: String!
  schema: Json!
  uiSchema: Json
  displayInNavigation: Boolean
  slug: [String!]!
  datasourceItems: [DatasourceItem!]! @relation(name: "DatasourceItemForPage", onDelete: CASCADE)
  page: [Page!]! @relation(name: "DatasourceOnPage")
}

type DatasourceItem {
  id: ID! @unique
  datasource: Datasource! @relation(name: "DatasourceItemForPage")
  slug: String!
  content: Json!
  createdAt: DateTime!
  updatedAt: DateTime!
}

